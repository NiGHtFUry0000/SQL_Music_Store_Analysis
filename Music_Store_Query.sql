/* Q1: Who is the youngest employee by age?*/

SELECT first_name, last_name, birthdate
FROM employee
ORDER BY birthdate ASC
LIMIT 1;
-- This query selects the first name, last name, and birthdate of the employee
-- with the earliest birthdate (youngest employee). It uses LIMIT 1 to retrieve
-- only the top result ordered by birthdate in ascending order (ASC).

/* Q2: Which countries have the least Invoices? */

SELECT COUNT(*) AS c, billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY c
-- This query counts the number of invoices (COUNT(*)) for each billing country
-- and groups the results by country. It then orders them by count in ascending
-- order (ASC) to reveal the countries with the least number of invoices first
	
/*Q3: What are top sales values of total sale for a single invoice? */

SELECT total 
FROM invoice
ORDER BY total DESC
LIMIT 1
-- This query retrieves the total amount from each invoice and orders them
-- in descending order (DESC) based on the total value. It uses LIMIT 1 to get
-- only the highest total value (top spender in a single invoice).

/* Q4.Which five countries have the lowest sales, 
presenting an opportunity to increase revenue through targeted marketing campaigns in low peroforming countries?*/

SELECT billing_country, SUM(total) AS Totalsales
FROM invoice
GROUP BY billing_country
ORDER BY Totalsales ASC
LIMIT 5;
-- This query calculates the total sales (SUM(total)) for each billing country
-- by grouping the results by country. It then orders them by total sales in
-- ascending order (ASC) and uses LIMIT 5 to show the bottom 5 countries with
-- the lowest sales, potentially indicating areas for marketing focus.

/* Q5: Identify the five customers who have spent the most overall based on their total invoice values. 
Please display their their corresponding total invoice amount and  full customer name. 
full customer name sholud be in a single column.*/
SELECT SUM(total) as total1 , CONCAT(TRIM(co.first_name), ' ', TRIM(co.last_name)) AS full_name
FROM invoice I
LEFT JOIN customer co ON I.customer_id=co.customer_id
GROUP BY full_name
ORDER BY total1 DESC
LIMIT 5;
-- This query calculates the total invoice amount (SUM(total)) spent by each
-- customer and groups the results by their full name (using CONCAT to combine
-- first and last names with trimming). It uses a LEFT JOIN with the customer
-- table to ensure all customers are included even if some might have missing
-- data. Finally, it orders by total spent in descending order (DESC) and uses
-- LIMIT 5 to show the top 5 customers who spent the most overall.

/* Question Set 2 - Moderate using join statements*/
/* Q1.Identify the top 5 countries that contribute the most revenue to your music store.*/

SELECT C.country, SUM(I.total) AS total_revenue
FROM customer C
JOIN invoice I ON C.customer_id = I.customer_id
GROUP BY C.country
ORDER BY total_revenue DESC
LIMIT 5;
-- This query joins the customer and invoice tables to identify customer countries.
-- It then calculates the total revenue (SUM(I.total)) for each country by grouping
-- the results by country. Finally, it orders the results by total revenue in
-- descending order (DESC) and uses LIMIT 5 to show the top 5 countries contributing
-- the most revenue.

/* Q2.Identify all customers who listen to Hip Hop/Rap music in your music store. 
Please display their full names (including first and last names) and the genre they listen to, 
Ensure the results are presented in alphabetical order by full name.*/

--This query identifies customers who listen to Hip Hop/Rap music in your music store. 
--It retrieves their full names (including first and last names) and the genre they listen to, 
--ensuring the results are presented alphabetically by full name. */

SELECT DISTINCT CONCAT(TRIM(C.first_name), ' ', TRIM(C.last_name)) AS full_name, G.name AS genre
FROM customer C
JOIN invoice I ON C.customer_id = I.customer_id  -- Join customer and invoice tables to link customer purchases
JOIN invoice_line IL ON I.invoice_id = IL.invoice_id  -- Join invoice_line to connect invoices with specific tracks
JOIN track T ON IL.track_id = T.track_id  -- Join track table to get track information
JOIN genre G ON T.genre_id = G.genre_id  -- Join genre table to identify genre name for each track
WHERE G.name = 'Hip Hop/Rap'  -- Filter for tracks belonging to the 'Hip Hop/Rap' genre
ORDER BY full_name;  -- Order results by full name in ascending order

/* Question Set 3-Advance using  Common Table Expression - CTE*/
/* Q1. Let's invite the most selling artists. 
Write a query that returns the Artist name and their total sales  */


--This query identifies the top-selling artists in your music store. 
--It calculates the total sales (revenue) generated by each artist and ranks them 
--in descending order (highest sales first). */

WITH ArtistSales AS (
  -- This CTE (Common Table Expression) calculates total revenue per artist.
  SELECT AR.name AS artist_name, SUM(IL.quantity * IL.unit_price) AS total_revenue
  FROM artist AR
  JOIN album AL ON AR.artist_id = AL.album_id  -- Join artist and album tables to link artists to their albums
  JOIN track ON AL.album_id = track.album_id  -- Join track table to connect albums with tracks
  JOIN invoice_line IL ON track.track_id = IL.track_id  -- Join invoice_line to link tracks with purchased items
  GROUP BY AR.name  -- Group results by artist name to calculate total revenue per artist
)
SELECT artist_name, SUM(total_revenue) AS total_sales  -- Select artist name and total sales from the CTE
FROM ArtistSales  -- Reference the CTE named ArtistSales
GROUP BY artist_name  -- Group by artist name again for final aggregation
ORDER BY total_sales DESC;  -- Order results by total sales in descending order (highest sales first)

/*Q2.Top Spenders! Find the customers who spent the most in each country,
return their full name, country, total spent*/

--This query identifies the top spenders in each country of your music store. 
--It retrieves their full names (including first and last names), the country they reside in, 
--and the total amount they spent. */

WITH TopSpendersPerCountry AS (
  -- This CTE calculates the total spent per customer in each country.
  SELECT C.customer_id, I.billing_country, SUM(I.total) AS total_spent
  FROM customer C
  JOIN invoice I ON C.customer_id = I.customer_id  -- Join customer and invoice tables to link customer purchases
  GROUP BY C.customer_id, I.billing_country  -- Group by both customer ID and billing country for accurate per-country spending
  ORDER BY total_spent DESC  -- Order within the CTE by total spent in descending order (highest spenders first)
)
SELECT CONCAT(TRIM(C.first_name), ' ', TRIM(C.last_name)) AS full_name,  -- Combine first and last names with trimming
       TSP.billing_country, TSP.total_spent
FROM TopSpendersPerCountry TSP  -- Reference the CTE named TopSpendersPerCountry
JOIN customer C ON TSP.customer_id = C.customer_id  -- Join with customer table to retrieve full names
WHERE TSP.total_spent = (  -- Identify top spender in each country
  SELECT MAX(total_spent)  -- Find the maximum total spent within each country group
  FROM TopSpendersPerCountry  -- Reference the CTE again
  WHERE billing_country = TSP.billing_country  -- Filter for the same country as the current TSP row
)
ORDER BY total_spent DESC;  -- Order final results by total spent in descending order (highest spenders first)
